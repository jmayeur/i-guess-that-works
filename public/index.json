[{"body":"","link":"http://localhost:1313/tags/dsl/","section":"tags","tags":null,"title":"DSL"},{"body":"","link":"http://localhost:1313/tags/go/","section":"tags","tags":null,"title":"Go"},{"body":"","link":"http://localhost:1313/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"http://localhost:1313/tags/hugo-summaries/","section":"tags","tags":null,"title":"Hugo Summaries"},{"body":"","link":"http://localhost:1313/posts/","section":"posts","tags":null,"title":"Posts"},{"body":"Sum it up, and be quick. The Basics Go HTML Template - This is the basic language that is used to inject dynamic content and logic into an otherwise static HTML Document Hugo Templates - Hugo uses the Go HTML Template to structure the a site, from the home page, to sub pages, to navigation, all of the facets of a Huge Site are driven through these templates Hugo Clarity\u0026rsquo;s Excerpt - This is the template I\u0026rsquo;m interested in, it renders the \u0026ldquo;Summary\u0026rdquo; that shows up on the root of this blog. A Summary Example There are definitely times when I will want to explicitly write the summary for a given post, but I do like automated things. The problem for me was that the autogenerated summary was pulling in the first few words from the post including the titles. The summary for the It Starts Here post reads \u0026ldquo;Hi, I\u0026rsquo;m Jeff What This site exists for me to collect\u0026hellip;\u0026rdquo;. You can read past the titles, but I wasn\u0026rsquo;t super pleased with it. Something had to be done.\nThe summary is generated from the content of the It Starts Here post. It\u0026rsquo;s a great feature of Hugo that it can autogenerate a quick summary, and display it in a list. This gives a quick way to surface content and doesn\u0026rsquo;t require the author to create a separate abstract or summary.\nEnough to be dangerous I\u0026rsquo;m not familiar with the Go HTML Template format. I\u0026rsquo;ve used templating languages before like Handlebars or Mustache, so I\u0026rsquo;m familiar with the concept, but not expert enough to start running on my own. I needed some help\nStep 1 Google is my friend when it comes to coding, although Github Copilot is slowly supplanting it. In this case because I didn\u0026rsquo;t even know where to start. I searched and stumpled across this blog entry from Yihui Xie. It gave me the first bits I needed, spefically this line, which would use a regex to grab the contents of the first paragraph.\n{{ $.Scratch.Set \u0026#34;summary\u0026#34; ((delimit (findRE \u0026#34;(?s)(\u0026lt;p.*?\u0026gt;.*?\u0026lt;/p\u0026gt;)\u0026#34; .Content) \u0026#34;[\u0026amp;hellip;] \u0026#34;) | plainify | truncate (default 200 $.Site.Params.summary_length) (default \u0026#34; \u0026amp;hellip;\u0026#34; $.Site.Params.text.truncated ) | replaceRE \u0026#34;\u0026amp;amp;\u0026#34; \u0026#34;\u0026amp;\u0026#34; | safeHTML) }} Step 2 I needed ot figure out where to add this magic bit of code. I see that in the blog, Yihui Xie indicates that I need to update the default/list.html. Looking at what I\u0026rsquo;ve got in the Clarity Theme, I see the code block below.\nThe first thing I tried was to just paste the code, but that as expected didn\u0026rsquo;t do what I was hoping. I needed to spend some time reading the templates. The first thing I noticed was the line - partial \u0026quot;archive\u0026quot;. I saw there as a partials folrder, and inside that there was an archive.html file. When I read that template I saw there was the - partial \u0026quot;excerpt\u0026quot; line and a cooresponding excerpt.html file. When I examined that file, I saw something similar to what was in the blog post. I tried copy-paste-victory, but again it didn\u0026rsquo;t work.\n// list.html {{ define \u0026#34;main\u0026#34; }} {{- partial \u0026#34;archive\u0026#34; . }} {{ end }} // excerpt.html snippet {{- $summary := truncate 320 .Summary }} {{- if .Params.summary }} {{- $summary = .Params.summary }} {{- else if .Params.abstract }} {{ $summary = .Params.abstract }} {{- end }} {{ if not ( strings.Contains $summary \u0026#34;\u0026lt;p\u0026gt;\u0026#34; ) }} \u0026lt;p\u0026gt;{{ $summary | markdownify }}\u0026lt;/p\u0026gt; {{ else }} {{ $summary | markdownify }} {{ end }} Step Win Once again I needed to read the template, and think about what it was doing. I saw the line {{- $summary := truncate 320 .Summary }} and realized it was setting a $summary variable with the truncated value of the .Summary This looked a lot like the work the {{ $.Scratch.Set \u0026quot;summary\u0026quot; ... line was trying to do. So I took the blog line, and merged it with the line in the excerpt.html file to create the line below - and Win. I now have an autogenerated Sumamry that is based on the first paragraph of a post. So much nicer.\n{{- $summary := ((delimit (findRE \u0026#34;(?s)(\u0026lt;p.*?\u0026gt;.*?\u0026lt;/p\u0026gt;)\u0026#34; .Content) \u0026#34;[\u0026amp;hellip;] \u0026#34;) | plainify | truncate (default 200 $.Site.Params.summary_length) (default \u0026#34; \u0026amp;hellip;\u0026#34; $.Site.Params.text.truncated ) | replaceRE \u0026#34;\u0026amp;amp;\u0026#34; \u0026#34;\u0026amp;\u0026#34; | safeHTML) }} Step Override Thankfully Hugo makes it pretty simple to override a theme. I created a local /layouts/partials/excerpt.html and there you have it - a clean sumamry.\nWrap In this case it definitely helped to have some experience with templating, it let me walk the code a little easier, but really it\u0026rsquo;s mostly about finding other examples, and just tinkering. There\u0026rsquo;s a good chance, that what I\u0026rsquo;ve done isn\u0026rsquo;t correct, but that\u0026rsquo;s okay, I\u0026rsquo;m learning, and part of that process is just trying things. In this case most of what I tried didn\u0026rsquo;t work. When I got stuck I read the code, thought about it, and came up with a new switch flip. So far I\u0026rsquo;m pretty happy with the outcome.\nEven in my professional career, it\u0026rsquo;s not uncommon for me to just try my way to a conclusion. I do have the advantage of having competent peers that can correct me, but it\u0026rsquo;s definitely a viable approach to solving the problems you encounter.\nQOTD “I\u0026rsquo;m smart enough to know that I\u0026rsquo;m dumb.” ― Richard Feynman\n","link":"http://localhost:1313/posts/summing-it-up/","section":"posts","tags":["Hugo","DSL","Templates","Go","Hugo Summaries"],"title":"Summing it up"},{"body":"","link":"http://localhost:1313/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"http://localhost:1313/tags/templates/","section":"tags","tags":null,"title":"Templates"},{"body":"","link":"http://localhost:1313/","section":"","tags":null,"title":"Working!"},{"body":"","link":"http://localhost:1313/tags/azure-static-web-apps/","section":"tags","tags":null,"title":"Azure Static Web Apps"},{"body":"","link":"http://localhost:1313/tags/dns/","section":"tags","tags":null,"title":"DNS"},{"body":"","link":"http://localhost:1313/tags/domain-registrar/","section":"tags","tags":null,"title":"Domain Registrar"},{"body":"","link":"http://localhost:1313/tags/julia-evans/","section":"tags","tags":null,"title":"Julia Evans"},{"body":"","link":"http://localhost:1313/tags/markdown/","section":"tags","tags":null,"title":"Markdown"},{"body":"","link":"http://localhost:1313/tags/name-servers/","section":"tags","tags":null,"title":"Name Servers"},{"body":"","link":"http://localhost:1313/tags/txt-record/","section":"tags","tags":null,"title":"TXT Record"},{"body":"It\u0026rsquo;s Alive Hugo + Markdown If you\u0026rsquo;ve spent much time in the programming space, Markdown. It\u0026rsquo;s a great lightweight approach to structuring a document. You can choose your own adventure when it comes to level of structure, and that lends itself nicely to the world of blogging. Because it\u0026rsquo;s essentially a template DSL, it\u0026rsquo;s relatively easy to go from MD \u0026ndash;\u0026gt; HTML. But I\u0026rsquo;m getting way ahead of myself, so let me back up.\nHow Did You Get Here? If the answer is \u0026ldquo;\u0026hellip;entered https://iguessthatworks.com in the browser\u0026hellip;\u0026rdquo; you\u0026rsquo;re as correct as you need to be. But, I still had questions about this magical flow. I highly recommend Julia Evans\u0026rsquo; How DNS Works zine, or for that matter anything that\u0026rsquo;s been posted by Julia. But there was something even more interesting to me about how this Azure Static Web App goes from some server in Azure to a browser.\nIt will take a few rambling posts to get there, but this one will cover a bit of the magic behind a TXT DNS Record.\nKey Pieces Domain Registrar Used to register and manage a Domain. In this case I\u0026rsquo;ve registered iguessthisworks.com allowing the management of DNS Records for it\nDNS Records A table of data about a Domain, including details such as where to look for iguessthisworks.com\n(NS) Nameserver Records Used to lookup who is the authoritative keeper of where to find the pot of gold at the end of the iguessthisworks.com\nTruck sized -well-I-guess-we-can- The TXT DNS Record is a way to associate a block of text with a Domain. Originally designed to be read by humans, it\u0026rsquo;s become a way to perform a secret handshake between a Domain Registrar and a Host\nWelcome The key here is the TXT DNS Record, but there are a few precursors I\u0026rsquo;ll try to cover in other posts including:\nWalking through setting up a basic (Hugo) site Writing the first post Updating to use the Clarity Theme Creating an Azure Static Web App to create a blog Registering a Domain That\u0026rsquo;s a whole lot of things, and there\u0026rsquo;s quite a few steps in each part, but I\u0026rsquo;m jumping ahead a bit to the Map an existing custom DNS name to Azure. Specifically the Validate part of the flow.\nI found this step deeply satisfying, as it\u0026rsquo;s one of the many times where a technology/protocol/strategy/other capability has be repurposed for something likely more useful than it\u0026rsquo;s original intent. Let\u0026rsquo;s start by reading a few TXT records.\ndig is a very useful tool for looking up DNS information about a domain. From unwinding CNAME chains, to troubleshooting resolution issues, this is a great tool to get familiar with. We\u0026rsquo;ll use it to read some TXT records for well known domains. Let\u0026rsquo;s start by looking at the command. dig @1.1.1.1 +ignore +short +bufsize=1024 \u0026lt;domain\u0026gt; txt\ndig - this is the command line tool we\u0026rsquo;ll use @1.1.1.1 - this is a DNS server I want to ask about the txt record. This can be omitted and it will use the server configured for your network +ignore - skip any cached data +short - give me the good stuff only, just the record. This can be omitted, you\u0026rsquo;ll just see additional details returned +bufsize=1024 - can help with longer messages. This can be omitted, you may get a truncated response, but that is unlikely \u0026lt;domain\u0026gt; - which domain do I want to query about txt - the record type to query. You can query other types like a or cname to see what you get Bing \u0026gt; dig @1.1.1.1 +ignore +short +bufsize=1024 bing.com txt \u0026#34;facebook-domain-verification=09yg8uzcfnqnlqekzsbwjxyy8rdck7\u0026#34; \u0026#34;google-site-verification=OkRY8R261shK5B8uEwvsFZp9nQ2gRoHavGlruok1azc\u0026#34; \u0026#34;v=msv1 t=6097A7EA-53F7-4028-BA76-6869CB284C54\u0026#34; \u0026#34;v=spf1 include:spf.protection.outlook.com -all\u0026#34; Google \u0026gt; dig @1.1.1.1 +ignore +short +bufsize=1024 google.com txt \u0026#34;globalsign-smime-dv=CDYX+XFHUw2wml6/Gb8+59BsH31KzUr6c1l2BPvqKX8=\u0026#34; \u0026#34;docusign=1b0a6754-49b1-4db5-8540-d2c12664b289\u0026#34; \u0026#34;google-site-verification=wD8N7i1JTNTkezJ49swvWW48f8_9xveREV4oB-0Hf5o\u0026#34; \u0026#34;apple-domain-verification=30afIBcvSuDV2PLX\u0026#34; \u0026#34;v=spf1 include:_spf.google.com ~all\u0026#34; \u0026#34;onetrust-domain-verification=de01ed21f2fa4d8781cbc3ffb89cf4ef\u0026#34; \u0026#34;docusign=05958488-4752-4ef2-95eb-aa7ba8a3bd0e\u0026#34; \u0026#34;google-site-verification=TV9-DBe4R80X4v0M4U_bd_J9cpOJM0nikft0jAgjmsQ\u0026#34; \u0026#34;webexdomainverification.8YX6G=6e6922db-e3e6-4a36-904e-a805c28087fa\u0026#34; \u0026#34;facebook-domain-verification=22rm551cu4k0ab0bxs Okay, so that\u0026rsquo;s neat, but why is that useful here. In this case I\u0026rsquo;m using the TXT record to prove to Azure that I am the true owner of the domain.\nAzure provides me with a generated key I add that to a TXT record in the GoDaddy Domain Control Admin Azure reads the TXT record and verifies the data Azure allows me to point the iguessthatworks.com Domain to the static web app I\u0026rsquo;ve already created It\u0026rsquo;s this repurposing of a technology that allows technical hobbyists like myself stitch together the various pieces of creating a blog and finding a way to make it eas(ier) to find. In the many years I\u0026rsquo;ve been playing at being a developer, it\u0026rsquo;s this kind of innovative \u0026ldquo;maybe if we just\u0026hellip;\u0026rdquo; type of solutions that bring me the most joy.\nWriting software is often repetitive, even with de-boilerplating tools like Github Copilot, there is a lot of sameness across all of the projects you get to work on. Encountering a short-cut like this TXT record approach, is like an inside joke, it makes me chuckle, and appreciate the way we\u0026rsquo;re all just trying to make something work.\nWhile this was only a few minutes in the flow of creating this blog, it\u0026rsquo;s definitely something I want to file away. Sometimes we need to look at the tools we have, and maybe at least for this case use that screwdriver as a hammer, despite what we were told by our elders.\nQOTD “I have never let my schooling interfere with my education.” ― Mark Twain\n","link":"http://localhost:1313/posts/where-is-hugo/","section":"posts","tags":["Hugo","DSL","DNS","TXT Record","Azure Static Web Apps","Domain Registrar","Julia Evans","Markdown","Name Servers"],"title":"Where Is Hugo"},{"body":"Hi, I\u0026rsquo;m Jeff What This site exists mostly for me collect things as they fly by. I\u0026rsquo;m not particularly expert at anything, but I\u0026rsquo;ve come to truly enjoy a wide array of \u0026ldquo;huh; what abouts\u0026hellip;\u0026rdquo; where I take the things I\u0026rsquo;ve seen before, hone them, and fit them into the future. Maybe this will only be useful for me. Maybe there\u0026rsquo;s something that can be borrowed and applied by others. In either case it gives me another tool to spelunk through my memory for tidbits I might want to repurpose.\nThe Technical I\u0026rsquo;ll be jotting down thoughts on technology, from what powers this experience (Hugo), and how it\u0026rsquo;s all wired together. To other random fiddly bits like Experimentation, caching \u0026amp; the fun of still semi-deterministic world wide web. I don\u0026rsquo;t expect much in the way of tutorials. I\u0026rsquo;ve learned over the years that the way I process new concepts isn\u0026rsquo;t always transferable, but I do like prattling on about things like why I\u0026rsquo;m continually surprised that there\u0026rsquo;s always a DSL at the bottom of where I\u0026rsquo;m digging, and at the same time why I\u0026rsquo;d panic if I didn\u0026rsquo;t find one. While this isn\u0026rsquo;t meant as a technical blog, I\u0026rsquo;m pretty sure I\u0026rsquo;ll use is as a the anchor I\u0026rsquo;m most weighted by.\nThe Harder Bits To Whom, and What. Ninety percent of my mental capacity, and emotional strife, are bound up in these two barrows. And I do mean All of barrow\u0026rsquo;s definitions. The PB\u0026amp;J Challenge, and it\u0026rsquo;s near cousins are often used to demonstrate the heart of this battle, but there\u0026rsquo;s subtlety that they can\u0026rsquo;t convey. Certainly communicating intent is fraught, but to me the emotional tango is where the the breath is hurried.\nWhile it\u0026rsquo;s still now, and there is no AI to do everything, it\u0026rsquo;s people that have to align and innovate. The real work, from what I\u0026rsquo;ve experienced is to keep the hearts and minds of the many focused on the next. It\u0026rsquo;s places like this that I hope to mine the most useful of memories. If there were times when I did something well to keep the greater from the lesser, that\u0026rsquo;s a thing I want to borrow and replay.\nElse I\u0026rsquo;ve always been good at starting things, which is key to my \u0026ldquo;not expert at anything\u0026rdquo; claim. I can do many things well enough to have a seat at the table, but I tend to rise, wander and forget my way back. I\u0026rsquo;m hopeful I\u0026rsquo;ll be somewhat stickier with this task, it is something I actually enjoy, and that my yet just be enough.\nQOTD “Watch out he\u0026rsquo;s winding the watch of his wit, by and by it will strike.” ― William Shakespeare, The Tempest\n","link":"http://localhost:1313/posts/it-starts-here/","section":"posts","tags":["Hugo","DSL"],"title":"It Starts Here"},{"body":"","link":"http://localhost:1313/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"http://localhost:1313/series/","section":"series","tags":null,"title":"Series"}]